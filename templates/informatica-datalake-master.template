{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "Informatica Data Lake Solution for AWS S3 Data Lake. This template creates Amazon EMR, S3, Redshift, EC2 instances, Elastic IPs and related resources and installs Informatica EIC and BDM. You will be billed for the AWS resources used if you create a stack from this template. QS(5024)",

	"Parameters": {
		"KeyPairName": {
			"Description": "Name of an existing Amazon EC2 keypair. You must specify this option to enable SSH access to Informatica domain and cluster instances",
			"Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        }, 
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
			"Description": "The CIDR IP range that is permitted to access the Informatica domain and the Informatica embedded cluster",
            "Type": "String"
        },        
		"InformaticaKeyS3Bucket": {
			"Type": "String",
			"Description": "Name of the Amazon S3 bucket in your account that contains Informatica Key"
		},
		"InformaticaKeyName": {
			"Type": "String",
			"Description": "The Informatica license key name. For example, <license key name> or <bucket sub folder/license key name>"
		},
		"InformaticaAdminUsername": {
			"Description": "Username to access Informatica Administrator",
			"Type": "String"
		},
		"InformaticaAdminPassword": {
			"Description": "Password to access Informatica Administrator",
			"Type": "String",
			"NoEcho": "True"
		},
		"InformaticaServerInstanceType": {
			"Type": "String",
			"Default": "c4.4xlarge",
			"AllowedValues": [
				"c4.4xlarge",
				"c4.8xlarge"
			],
			"Description": "The EC2 instance type for the instance that hosts the Informatica domain. Default is c4.4xlarge"
		},
		"DBUser": {
			"Default": "awsquickstart",
			"Description": "Username for the database instance associated with Informatica domain and services (such as Model Repository Service, Data Integration Service, Content Management Service)",
			"Type": "String",
			"MinLength": "8",
			"MaxLength": "18"
		},
		"DBPassword": {
			"Description": "Password for the database instance associated with Informatica domain and services (such as Model Repository Service, Data Integration Service, Content Management Service)",
			"Type": "String",
			"NoEcho": "True",
			"MinLength": "8",
			"MaxLength": "18"
		},
		"ICSClusterSize": {
			"Type": "String",
			"Default": "Small",
			"AllowedValues": [
				"Small",
				"Medium",
				"Large"
			],
			"Description": "The cluster size (i.) Small (c4.8xlarge, single node) (ii.) Medium (c4.8xlarge, three nodes) (iii.)  Large (c4.8xlarge, six nodes)"
		},
		"ImportSampleData": {
			"Type": "String",
			"Default": "No",
			"AllowedValues": [
				"Yes",
				"No"
			],
			"Description": "Select Yes to import the sample catalog data. You can use the sample data to get started with the product"
		},
		"EMRClusterName": {
			"Description": "Enter a name for your EMR cluster",
			"Type": "String"
		},
		"EMRCoreInstanceType": {
			"Type": "String",
			"Default": "m4.xlarge",
			"AllowedValues": [
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge",
				"m4.10xlarge"
			],
			"Description": "Enter the instance type for the EMR core nodes. Default is m4.xlarge"
		},
		"EMRCoreNodes": {
			"Description": "Enter the number of Core Nodes. Minimum is 1.",
			"Type": "Number",
			"MinValue": "1",
			"MaxValue": "500"
		},
		"EMRLogBucket": {
			"Description": "Enter the S3 bucket for the EMR logs",
			"Type": "String"
		},
		"EMRMasterInstanceType": {
			"Type": "String",
			"Default": "m4.xlarge",
			"AllowedValues": [
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge",
				"m4.10xlarge"
			],
			"Description": "Enter the instance type for the EMR master node. Default is m4.xlarge"
		},
		"QSS3BucketName": {
			"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
			"ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Default": "quickstart-reference",
			"Description": "Do not change: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Type": "String"
		},
		"QSS3KeyPrefix": {
			"AllowedPattern": "^[0-9a-zA-Z-/]*$",
			"ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
			"Default": "informatica/datalake/latest/",
			"Description": "Do not change: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
			"Type": "String"
		},
		"RedshiftDatabaseName": {
			"Description": "The name of the first database to be created when the cluster is created",
			"Type": "String",
			"Default": "dev",
			"AllowedPattern": "([a-z]|[0-9])+"
		},
		"RedshiftClusterType": {
			"Description": "The type of cluster. Default is single-node",
			"Type": "String",
			"Default": "single-node",
			"AllowedValues": ["single-node", "multi-node"]
		},
		"RedshiftNumberOfNodes": {
			"Description": "The number of compute nodes in the cluster. For multi-node clusters, the NumberOfNodes parameter must be greater than 1",
			"Type": "Number",
			"Default": "1"
		},
		"RedshiftNodeType": {
			"Description": "Specifies the compute, memory, storage, and I/O capacity of the cluster's nodes. Default is ds2.xlarge",
			"Type": "String",
			"Default": "ds2.xlarge",
			"AllowedValues": ["ds2.xlarge", "ds2.8xlarge", "dc1.large", "dc1.8xlarge"]
		},
		"RedshiftUsername": {
			"Description": "The user name that is associated with the master user account for the cluster that is being created",
			"Type": "String",
			"Default": "defaultuser",
			"AllowedPattern": "([a-z])([a-z]|[0-9])*"
		},
		"RedshiftPassword": {
			"Description": "The password that is associated with the master user account for the cluster that is being created. Must be 8 to 64 characters in length and contain at least one uppercase letter, one lowercase letter, and one number",
			"Type": "String",
			"NoEcho": "true",
			"MinLength": "8",
			"MaxLength": "64",
			"AllowedPattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!#$%&\\(\\)*+,-.;<=>?\\[\\]^_`{|}~]{8,64}$"
		},
		"RedshiftDatabasePort": {
			"Description": "The port number on which the cluster accepts incoming connections. Default is 5439",
			"Type": "Number",
			"Default": "5439"
		}
	},
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
					"Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "RemoteAccessCIDR"
                    ]
                }, {
					"Label": {
						"default": "Amazon EC2 Configuration"
					},
					"Parameters": [
						"KeyPairName",
						"InformaticaServerInstanceType",
						"ICSClusterSize"
					]
				}, {
					"Label": {
						"default": "Amazon RDS Configuration"
					},
					"Parameters": [
						"DBUser",
						"DBPassword"
					]
				}, {
					"Label": {
						"default": "Informatica Enterprise Catalog and BDM Configuration"
					},
					"Parameters": [
						"InformaticaAdminUsername",
						"InformaticaAdminPassword",
						"InformaticaKeyS3Bucket",
						"InformaticaKeyName",
						"ImportSampleData"
					]
				}, {
					"Label": {
						"default": "Amazon EMR Configuration"
					},
					"Parameters": [
						"EMRMasterInstanceType",
						"EMRCoreInstanceType",
						"EMRClusterName",
						"EMRCoreNodes",
						"EMRLogBucket"
					]
				}, {
					"Label": {
						"default": "Amazon Redshift Configuration"
					},
					"Parameters": [
						"RedshiftDatabaseName",
						"RedshiftClusterType",
						"RedshiftNumberOfNodes",
						"RedshiftNodeType",
						"RedshiftUsername",
						"RedshiftPassword",
						"RedshiftDatabasePort"
					]
				}, {
					"Label": {
						"default": "AWS Quick Start Configuration"
					},
					"Parameters": [
						"QSS3BucketName",
						"QSS3KeyPrefix"
					]
				}
			],
			"ParameterLabels": {
				"AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "RemoteAccessCIDR": {
                    "default": "IP Address Range"
                },
				"InformaticaServerInstanceType": {
					"default": "Informatica Domain Instance Type"
				},
				"InformaticaAdminUsername": {
					"default": "Informatica Administrator Username"
				},
				"InformaticaAdminPassword": {
					"default": "Informatica Administrator Password"
				},
				"InformaticaKeyS3Bucket": {
					"default": "License Key Location"
				},
				"InformaticaKeyName": {
					"default": "License Key Name"
				},
				"DBUser": {
					"default": "Informatica Database Instance Username"
				},
				"DBPassword": {
					"default": "Informatica Database Instance Password"
				},
				"ICSClusterSize": {
					"default": "Informatica Embedded Cluster Size"
				},
				"ImportSampleData": {
					"default": "Import Sample Content"
				},
				"KeyPairName": {
					"default": "Key Pair Name"
				},
				"EMRClusterName": {
					"default": "EMR Cluster Name"
				},
				"EMRCoreInstanceType": {
					"default": "EMR Core Instance Type"
				},
				"EMRCoreNodes": {
					"default": "EMR Core Nodes"
				},
				"EMRLogBucket": {
					"default": "EMR Logs Bucket Name"
				},
				"EMRMasterInstanceType": {
					"default": "EMR Master Instance Type"
				},
				"QSS3BucketName": {
					"default": "Quick Start S3 Bucket Name"
				},
				"QSS3KeyPrefix": {
					"default": "Quick Start S3 Key Prefix"
				},
				"RedshiftDatabaseName": {
					"default": "Redshift Database Name"
				},
				"RedshiftClusterType": {
					"default": "Redshift Cluster Type"
				},
				"RedshiftNumberOfNodes": {
					"default": "Redshift Number of Nodes"
				},
				"RedshiftNodeType": {
					"default": "Redshift Node Type"
				},
				"RedshiftUsername": {
					"default": "Redshift Username"
				},
				"RedshiftPassword": {
					"default": "Redshift Password"
				},
				"RedshiftDatabasePort": {
					"default": "Redshift Database Port"
				}

			}
		}
	},
	"Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "DataLakeStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-datalake.template"
                },
                "Parameters": {
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "InformaticaServerSubnetID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "DBSubnetIDs": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet1AID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet2AID"
                                    ]
                                }
                            ]
                        ]
                    },
                    "IPAddressRange": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "KeyName": {
                        "Ref": "KeyPairName"
                    },
                    "InformaticaServerInstanceType": {
                        "Ref": "InformaticaServerInstanceType"
                    },
                    "ICSClusterSize": {
                        "Ref": "ICSClusterSize"
                    },
                    "DBUser": {
                        "Ref": "DBUser"
                    },
                    "DBPassword": {
                        "Ref": "DBPassword"
                    },
                    "InformaticaAdminUsername": {
                        "Ref": "InformaticaAdminUsername"
                    },
                    "InformaticaAdminPassword": {
                        "Ref": "InformaticaAdminPassword"
                    },
                    "InformaticaKeyS3Bucket": {
                        "Ref": "InformaticaKeyS3Bucket"
                    },
                    "InformaticaKeyName": {
                        "Ref": "InformaticaKeyName"
                    },
                    "ImportSampleData": {
                        "Ref": "ImportSampleData"
                    },
                    "EMRMasterInstanceType": {
                        "Ref": "EMRMasterInstanceType"
                    },
                    "EMRCoreInstanceType": {
                        "Ref": "EMRCoreInstanceType"
                    },
                    "EMRClusterName": {
                        "Ref": "EMRClusterName"
                    },
                    "EMRCoreNodes": {
                        "Ref": "EMRCoreNodes"
                    },
                    "EMRLogBucket": {
                        "Ref": "EMRLogBucket"
                    },
                    "RedshiftDatabaseName": {
                        "Ref": "RedshiftDatabaseName"
                    },
                    "RedshiftClusterType": {
                        "Ref": "RedshiftClusterType"
                    },
                    "RedshiftNumberOfNodes": {
                        "Ref": "RedshiftNumberOfNodes"
                    },
                    "RedshiftNodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftDatabasePort": {
                        "Ref": "RedshiftDatabasePort"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    }
                }
            }
        }
	}
}